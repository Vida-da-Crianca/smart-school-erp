name: Production
on:
  push:
    # Publish `master` as Docker `latest` image.
    paths-ignore:
      - README.md
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: erpjb-school
  STACK_NAME: ERP_PROD
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PWD: ${{secrets.DOCKER_PASSWORD}}
  DIRECTORY_APPLICATION: /var/apps/production/erp/app
  IMAGE_ID: ''

jobs:
  build:
    # Ensure test job passes before pushing image.
    runs-on: "docker-stack"
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file docker/Dockerfile --tag $IMAGE_NAME

      - name: Auth in docker register
        run: docker login -u $DOCKER_USER -p $DOCKER_PWD

      - name: Push image to Docker Container Registry
        run: |
          IMAGE_ID=carlosocarvalho/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  deploy:
    runs-on: "docker-stack"
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Create Folder for Application
        run: |
          mkdir -p -m 777 $DIRECTORY_APPLICATION/app/uploads
          mkdir -p -m 777 $DIRECTORY_APPLICATION/app/logs
          mkdir -p -m 777 $DIRECTORY_APPLICATION/app/temp
          rsync -qr -I   ./uploads/  $DIRECTORY_APPLICATION/app/uploads
      - name: Create Stack
        run: |
          IMAGE_ID=carlosocarvalho/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker stack deploy -c production-stack.yml $STACK_NAME

  clear_system:
      runs-on: "docker-stack"
      needs: deploy
      steps:
        - name: Clear docker system
          run: |
            sleep 5
            docker system prune --force
